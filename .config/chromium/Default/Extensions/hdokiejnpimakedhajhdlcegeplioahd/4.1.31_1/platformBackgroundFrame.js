LPPlatform="undefined"===typeof LPPlatform?{}:LPPlatform;(function(){LPPlatform.isMac=function(){return"undefined"!=typeof navigator&&-1!=navigator.appVersion.indexOf("Mac")}})();
(function(b){b.translate=function(a){return gs(a)};b.isWin=function(){return"undefined"!=typeof navigator&&-1!=navigator.appVersion.indexOf("Windows")};var d=null,f=[],j=function(a){var b=a.callback;a.callback=function(a){for(var c in a)window[c]=a[c];b&&b()};d.LPData.getData(a)};b.getBackgroundInterface=function(a){null===d&&(d=b.createBackgroundInterface(a));a.getData?d.getData(a):a.callback&&a.callback(d);return d};b.createBackgroundInterface=function(a){g_bg=window;var e=new LPBackgroundRequester(b.requestFrameworkInitializer,
{interfaceDefinition:a.interfaceDefinition,interfaceName:a.interfaceDefinition?parent.Interfaces.getName(a.interfaceDefinition):null,reflectionContext:parent,mainRequestFramework:"undefined"===typeof a.mainRequestFramework?!0:a.mainRequestFramework});e.initialize();var h=function(a){e.sendRequest({type:"backgroundRequest",data:a})},c=Interfaces.createInstance(Interfaces.BackgroundInterface,{context:a.context,source:window,direct:!1,requestFunction:h});c.getData=function(b){var e=b.callback;b.callback=
function(){if(a.pollBackground){var g=b.context;"string"===typeof g&&-1===f.indexOf(g)&&f.push(g);setInterval(function(){j({context:f,triggers:{g_local_accts_version:d.get("g_local_accts_version")}})},1E3)}e&&e(c)};j(b)};parent.LPDialog&&(parent.LPDialog.beforeLoad=function(a,b){Interfaces.createInstance(Interfaces.BackgroundInterface,{instance:c,context:a,source:window,direct:!1,requestFunction:h});c.getData({context:a,callback:function(){parent.LPProxy.initializeModel();b()}})});a.backgroundIntitialization&&
a.backgroundIntitialization(c);return c};b.adjustPreferenceDefaults=function(){};b.getPreference=function(a){return g_userprefs.hasOwnProperty(a)?g_userprefs[a]:g_gblprefs[a]};b.setUserPreference=function(a,b){g_userprefs[a]=b};b.setGlobalPreference=function(a,b){g_gblprefs[a]=b};b.writePreferences=function(){}})(LPPlatform);
